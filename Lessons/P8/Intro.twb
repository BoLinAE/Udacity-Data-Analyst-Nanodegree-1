<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0505.1445                               -->
<workbook source-build='10.2.2 (10200.17.0505.1445)' source-platform='win' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders+ (global-superstore)' inline='true' name='federated.1ojdq1q1ed74d5186jxuw0q5tfni' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global-superstore' name='excel-direct.18ucvhe0uidq6x168remq0vd0dtd'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/Will Koehrsen/Udacity-Data-Analyst-Nanodegree/Lessons/P8/global-superstore.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Region]' />
              <expression op='[People].[Region]' />
            </expression>
          </clause>
          <relation connection='excel-direct.18ucvhe0uidq6x168remq0vd0dtd' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X10001:1' header='yes' lost='0' outcome='1' processed='81721'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='City' ordinal='8' />
              <column datatype='string' name='State' ordinal='9' />
              <column datatype='string' name='Country' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Market' ordinal='12' />
              <column datatype='string' name='Region' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.18ucvhe0uidq6x168remq0vd0dtd' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B14:no:A1:B14:0' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Market]' value='[Orders].[Market]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>81721</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B14:no:A1:B14:0&quot;</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit per Item' datatype='real' name='[Calculation_961518529517793280]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Profit]/[Quantity]' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Low Quantity Countries' datatype='string' name='[Country (group) 1]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Albania, Algeria, Angola and 73 more&quot;'>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Barbados&quot;</value>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Canada&quot;</value>
            <value>&quot;Central African Republic&quot;</value>
            <value>&quot;Cote d&apos;Ivoire&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Czech Republic&quot;</value>
            <value>&quot;Democratic Republic of the Congo&quot;</value>
            <value>&quot;Djibouti&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;Equatorial Guinea&quot;</value>
            <value>&quot;Eritrea&quot;</value>
            <value>&quot;Estonia&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Guinea-Bissau&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;Iran&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Kazakhstan&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Kyrgyzstan&quot;</value>
            <value>&quot;Lebanon&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Libya&quot;</value>
            <value>&quot;Lithuania&quot;</value>
            <value>&quot;Macedonia&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Moldova&quot;</value>
            <value>&quot;Mongolia&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;Poland&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Romania&quot;</value>
            <value>&quot;Russia&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;Slovakia&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Swaziland&quot;</value>
            <value>&quot;Syria&quot;</value>
            <value>&quot;Tanzania&quot;</value>
            <value>&quot;Togo&quot;</value>
            <value>&quot;Tunisia&quot;</value>
            <value>&quot;Turkey&quot;</value>
            <value>&quot;Turkmenistan&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;Ukraine&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
            <value>&quot;Yemen&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Algeria, Angola, Barbados and 41 more&quot;'>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Barbados&quot;</value>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Canada&quot;</value>
            <value>&quot;Central African Republic&quot;</value>
            <value>&quot;Cote d&apos;Ivoire&quot;</value>
            <value>&quot;Democratic Republic of the Congo&quot;</value>
            <value>&quot;Djibouti&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;Equatorial Guinea&quot;</value>
            <value>&quot;Eritrea&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Guadeloupe&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Guinea-Bissau&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Libya&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Swaziland&quot;</value>
            <value>&quot;Tanzania&quot;</value>
            <value>&quot;Togo&quot;</value>
            <value>&quot;Tunisia&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Avg' name='[avg:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Money Losers]' derivation='InOut' name='[io:Money Losers:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,YEAR(Order Date))' hidden='true' name='[Action (Country,YEAR(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[tyr:Order Date:ok]' />
        </groupfilter>
      </group>
      <group name='[Money Losers]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='SUM([Profit]) &lt; 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Product Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.671582' group-percentage='0.0375335' measure-ordering='alphabetic' measure-percentage='0.290885' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[avg:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ojdq1q1ed74d5186jxuw0q5tfni]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[avg:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Money Losers:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>false</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Myanmar (Burma)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight1' name='[Action1]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter1' name='[Action2]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global-superstore)' name='federated.1ojdq1q1ed74d5186jxuw0q5tfni' />
          </datasources>
          <datasource-dependencies datasource='federated.1ojdq1q1ed74d5186jxuw0q5tfni'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[avg:Profit:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ffaa00</color>
                <color>#fbaf16</color>
                <color>#f8b42d</color>
                <color>#f4b942</color>
                <color>#f1be57</color>
                <color>#edc26c</color>
                <color>#eac67f</color>
                <color>#e6ca92</color>
                <color>#e3cea5</color>
                <color>#dfd2b7</color>
                <color>#dcd5c8</color>
                <color>#d9d9d9</color>
                <color>#9dcbe4</color>
                <color>#8ec2df</color>
                <color>#80b6d9</color>
                <color>#73a8d0</color>
                <color>#669bc7</color>
                <color>#5c91bf</color>
                <color>#5385b2</color>
                <color>#487aa9</color>
                <color>#3b6ea0</color>
                <color>#306495</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[avg:Profit:qk]</rows>
        <cols>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[tyr:Order Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global-superstore)' name='federated.1ojdq1q1ed74d5186jxuw0q5tfni' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ojdq1q1ed74d5186jxuw0q5tfni'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[Action (Country,YEAR(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[tyr:Order Date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[Action (Country,YEAR(Order Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[Longitude (generated)]' field-type='quantitative' max='76909103.636811674' min='19692624.736112684' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[Latitude (generated)]' field-type='quantitative' max='21318426.335138839' min='-14490792.675900539' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[sum:Profit:qk]' />
              <lod column='[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[none:Country:nk]' />
              <geometry column='[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[Latitude (generated)]</rows>
        <cols>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global-superstore)' name='federated.1ojdq1q1ed74d5186jxuw0q5tfni' />
          </datasources>
          <datasource-dependencies datasource='federated.1ojdq1q1ed74d5186jxuw0q5tfni'>
            <column caption='Profit per Item' datatype='real' name='[Calculation_961518529517793280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Profit]/[Quantity]' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_961518529517793280]' derivation='Avg' name='[avg:Calculation_961518529517793280:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[none:Sub-Category:nk]' direction='DESC' using='[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[avg:Calculation_961518529517793280:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[avg:Calculation_961518529517793280:qk]</rows>
        <cols>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[none:Sub-Category:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='6' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='4' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='1' name='Sheet 1' w='84000' x='0' y='0' />
              <zone h='50000' id='3' name='Sheet 2' w='84000' x='0' y='50000' />
            </zone>
            <zone fixed-size='160' h='100000' id='5' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='9625' id='7' name='Sheet 2' pane-specification-id='0' param='[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[sum:Profit:qk]' type='color' w='16000' x='84000' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[io:Money Losers:nk]</field>
            <field>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[none:Category:nk]</field>
            <field>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[none:Country:nk]</field>
            <field>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[none:Customer ID:nk]</field>
            <field>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[none:Market:nk]</field>
            <field>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[none:Order Priority:nk]</field>
            <field>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[none:Region:nk]</field>
            <field>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[none:Sub-Category:nk]</field>
            <field>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[Country (group) 1]</field>
            <field>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ojdq1q1ed74d5186jxuw0q5tfni].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      vdYP/73/P3m399aLVZkCAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
