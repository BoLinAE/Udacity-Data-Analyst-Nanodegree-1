facet_wrap(~gender)
qplot(x= friend_count, data=subset(facebookData, !is.na(gender)),
binwidth = 20, geom='freqpoly', color=gender) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50))
qplot(x= friend_count, data=subset(facebookData, !is.na(gender)),
binwidth = 5) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50)) +
facet_wrap(~gender)
qplot(x= friend_count, data=subset(facebookData, !is.na(gender)),
binwidth = 5, geom='freqpoly', color=gender) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50))
x = subset(facebookData, !is.na(gender))
x = subset(facebookData, !is.na(gender), friend_count)
x = subset(facebookData, !is.na(gender) & gender=='male', friend_count)
qplot(x= females, binwidth = 5, geom='freqpoly') +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50))
males = subset(facebookData, !is.na(gender) & gender=='male', friend_count)
females = subset(facebookData, !is.na(gender) & gender=='female', friend_count)
qplot(x= males, data=subset(facebookData, !is.na(gender)),
binwidth = 5) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50)) +
facet_wrap(~gender)
qplot(x= females, binwidth = 5, geom='freqpoly') +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50))
qplot(x= males, binwidth = 5) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50)) +
facet_wrap(~gender)
qplot(x= females, binwidth = 5, geom='freqpoly') +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50))
qplot(x= males, binwidth = 5, color='green') +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50)) +
facet_wrap(~gender)
qplot(x= females, binwidth = 5, geom='freqpoly', color='red') +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50))
qplot(x= males, binwidth = 5, color='green') +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50)) +
facet_wrap(~gender)
qplot(x= females/length(females), binwidth = 5, geom='freqpoly', color='red') +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50))
length(females)
length(females$friend_count)
qplot(x= males/length(males$friend_count), binwidth = 5, color='green') +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50)) +
facet_wrap(~gender)
qplot(x= females/length(females$friend_count), binwidth = 5, geom='freqpoly', color='red') +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50))
qplot(x= friend_count, data=subset(facebookData, !is.na(gender)),
binwidth = 5) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50)) +
facet_wrap(~gender)
qplot(x= friend_count, y= ..count/sum(..count..),
data=subset(facebookData, !is.na(gender),
xlab = 'Friend Count',
ylab = 'Proportion of Users')
binwidth = 5, geom='freqpoly', color=gender) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50))
View(x)
View(x)
rm(x)
qplot(x= friend_count, data=subset(facebookData, !is.na(gender)),
binwidth = 5) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50)) +
facet_wrap(~gender)
qplot(x= friend_count, y= ..count/sum(..count..),
data=subset(facebookData, !is.na(gender),
xlab = 'Friend Count',
ylab = 'Proportion of Users')
binwidth = 5, geom='freqpoly', color=gender) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50))
qplot(x= friend_count, data=subset(facebookData, !is.na(gender)),
binwidth = 5) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50)) +
facet_wrap(~gender)
qplot(x= friend_count, y= ..count/sum(..count..),
data=subset(facebookData, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users'
binwidth = 5, geom='freqpoly', color=gender) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50))
qplot(x= friend_count, data=subset(facebookData, !is.na(gender)),
binwidth = 5) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50)) +
facet_wrap(~gender)
qplot(x= friend_count, y= ..count../sum(..count..),
data=subset(facebookData, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users'
binwidth = 5, geom='freqpoly', color=gender) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50))
qplot(x= friend_count, data=subset(facebookData, !is.na(gender)),
binwidth = 5) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50)) +
facet_wrap(~gender)
qplot(x= friend_count, y= ..count../sum(..count..),
data=subset(facebookData, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users',
binwidth = 5, geom='freqpoly', color=gender) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50))
qplot(x= friend_count, data=subset(facebookData, !is.na(gender)),
binwidth = 5) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50)) +
facet_wrap(~gender)
qplot(x= friend_count, y= ..density..,
data=subset(facebookData, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users',
binwidth = 5, geom='freqpoly', color=gender) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50))
qplot(x = www_likes, data=facebookData) +
facet_wrap(~gender)
qplot(x = www_likes, data=facebookData,
geom='freqpoly', color=gender)
qplot(x = www_likes, y=..density.., data=facebookData) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50))
facet_wrap(~gender)
qplot(x = www_likes, y=..density.., data=facebookData,
geom='freqpoly', color=gender) +
scale_x_continuous(lim=c(0,1000),breaks=seq(0,1000,50))
qplot(x = www_likes, y=..density.., data=facebookData) +
scale_x_continuous(lim=c(0,250), breaks=seq(0,250, 5))
facet_wrap(~gender)
qplot(x = www_likes, y=..density.., data=facebookData,
geom='freqpoly', color=gender) +
scale_x_continuous(lim=c(0,250),breaks=seq(0,250,5))
qplot(x = www_likes, y=..density.., data=facebookData) +
scale_x_continuous(lim=c(0,250), breaks=seq(0,250, 5))
facet_wrap(~gender)
qplot(x = www_likes, y=..density.., data=facebookData,
geom='freqpoly', color=gender,
xlab = 'Number of Likes on Web',
ylab = 'Proportion of Users with Number of Likes') +
scale_x_continuous(lim=c(0,250),breaks=seq(0,250,5))
qplot(x = www_likes, y=..density.., data=facebookData) +
scale_x_continuous(lim=c(0,250), breaks=seq(0,250, 50))
facet_wrap(~gender)
qplot(x = www_likes, y=..density.., data=facebookData,
geom='freqpoly', color=gender,
xlab = 'Number of Likes on Web',
ylab = 'Proportion of Users with Number of Likes') +
scale_x_continuous(lim=c(0,250),breaks=seq(0,250,50))
qplot(x = www_likes, y=..density.., data=facebookData) +
scale_x_continuous(lim=c(0,250), breaks=seq(0,250, 5))
facet_wrap(~gender)
qplot(x = www_likes, y=..density.., data=facebookData,
geom='freqpoly', color=gender,
xlab = 'Number of Likes on Web',
ylab = 'Proportion of Users with Number of Likes') +
scale_x_continuous(lim=c(0,250),breaks=seq(0,250,50))
qplot(x = www_likes, y=..density.., data=facebookData) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,250, 5))
facet_wrap(~gender)
qplot(x = www_likes, y=..density.., data=facebookData,
geom='freqpoly', color=gender,
xlab = 'Number of Likes on Web',
ylab = 'Proportion of Users with Number of Likes') +
scale_x_continuous(lim=c(0,250),breaks=seq(0,250,50))
qplot(x = www_likes, y=..density.., data=facebookData) +
scale_x_continuous(lim=c(0,250), breaks=seq(0,250, 5))
facet_wrap(~gender)
qplot(x = www_likes, y=..density.., data=facebookData, binwidth = 20,
geom='freqpoly', color=gender,
xlab = 'Number of Likes on Web',
ylab = 'Proportion of Users with Number of Likes') +
scale_x_continuous(lim=c(0,250),breaks=seq(0,250,50))
qplot(x = www_likes, y=..density.., data=subset(facebookData, !is.na(gender))) +
scale_x_continuous(lim=c(0,250), breaks=seq(0,250, 5))
facet_wrap(~gender)
qplot(x = www_likes, y=..density.., data=subset(facebookData, !is.na(gender)),
geom='freqpoly', color=gender, binwidth = 20,
xlab = 'Number of Likes on Web',
ylab = 'Proportion of Users with Number of Likes') +
scale_x_continuous(lim=c(0,250),breaks=seq(0,250,50))
females = subset(facebookData, !is.na(gender) & gender=='female', friend_count, www_likes)
males = subset(facebookData, !is.na(gender) & gender=='male', [friend_count, www_likes])
males = subset(facebookData, !is.na(gender) & gender=='male', friend_count & www_likes)
males = subset(facebookData, !is.na(gender) & gender=='male', friend_count & www_likes)
females = subset(facebookData, !is.na(gender) & gender=='female', friend_count & www_likes)
males = subset(facebookData, !is.na(gender) & gender=='male',  www_likes)
females = subset(facebookData, !is.na(gender) & gender=='female',www_likes)
summary(females)
summary(males)
by(facebookData$www_likes, facebookData$gender, summary)
by(facebookData$www_likes, facebookData$gender, summary)
by(facebookData$www_likes, facebookData$gender, sum)
qplot(x = www_likes, y=..density.., data=subset(facebookData, !is.na(gender))) +
scale_x_continuous(lim=c(0,250), breaks=seq(0,250, 5))
facet_wrap(~gender)
qplot(x = www_likes, data=subset(facebookData, !is.na(gender)),
geom='freqpoly', color=gender, binwidth = 20,
xlab = 'Number of Likes on Web',
ylab = 'Proportion of Users with Number of Likes') +
scale_x_continuous(lim=c(0,1000),breaks=seq(0,1000,50))
qplot(x = www_likes, y=..density.., data=subset(facebookData, !is.na(gender))) +
scale_x_continuous(lim=c(0,250), breaks=seq(0,250, 5))
facet_wrap(~gender)
qplot(x = www_likes, data=subset(facebookData, !is.na(gender)),
geom='freqpoly', color=gender, binwidth = 20,
xlab = 'Number of Likes on Web',
ylab = 'Proportion of Users with Number of Likes') +
scale_x_continuous(lim=c(0,250),breaks=seq(0,250,50))
qplot(x = www_likes, data=subset(facebookData, !is.na(gender))) +
facet_wrap(~gender)
qplot(x = www_likes, data=subset(facebookData, !is.na(gender)),
geom='freqpoly', color=gender, binwidth = 20,
xlab = 'Number of Likes on Web',
ylab = 'Proportion of Users with Number of Likes') +
scale_x_continuous(lim=c(0,250),breaks=seq(0,250,50))
qplot(x = www_likes, data=subset(facebookData, !is.na(gender))) +
facet_wrap(~gender)
qplot(x = www_likes, y=..density.., data=subset(facebookData, !is.na(gender)),
geom='freqpoly', color=gender, binwidth = 20,
xlab = 'Number of Likes on Web',
ylab = 'Proportion of Users with Number of Likes') +
scale_x_continuous(lim=c(0,250),breaks=seq(0,250,50))
qplot(x = gender, y = friend_count, data = subset(facebookData, !is.na(gender)),
geom = 'boxplot')
qplot(x = gender, y = friend_count, data = subset(facebookData, !is.na(gender)),
geom = 'boxplot')+
scale_y_continuous(lim=c(0,1000))
qplot(x = gender, y = friend_count, data = subset(facebookData, !is.na(gender)),
geom = 'boxplot')+
coord_cartesian(ylim=c(0,1000))
by(facebookData$friend_count, facebookData$gender, summary)
by(facebookData$friendships_initiated, facebook$gender, summary)
by(facebookData$friendships_initiated, facebookData$gender, summary)
by(facebookData$friend_count, facebookData$gender, summary)
by(facebookData$friendships_initiated, facebookData$gender, summary)
qplot(x = gender, y = friendships_initiated, data=subset(facebookData, !is.na(gender)))+
coord_cartesian(ylim=c(0,200))
qplot(x = gender, y = friendships_initiated, data=subset(facebookData, !is.na(gender)),
geom = 'boxplot')+
coord_cartesian(ylim=c(0,200))
facebookData$mobile_checkin <- ifelse(facebookData$mobile_likes>0, 1, 0)
View(facebookData)
View(facebookData)
facebookData$mobile_checkin <- factor(facebookData$mobile_checkin)
summary(facebookData$mobile_checkin)
length(subset(facebookData, mobile_checkin ==1))/ length(facebookData$mobile_checkin)
length(facebookData$mobile_checkin)
length(subset(facebookData, mobile_checkin ==1),)/ length(facebookData$mobile_checkin)
length(facebookData$mobile_checkin ==1)/ length(facebookData$mobile_checkin)
length(facebookData[facebookData$mobile_checkin ==1])/ length(facebookData$mobile_checkin)
facebookData[facebookData$mobile_checkin==1]
facebookData[facebookData$mobile_checkin==1,]
length(length(facebookData[facebookData$mobile_checkin ==1])/ length(facebookData$mobile_checkin)
facebookData[facebookData$mobile_checkin==1,]
length(facebookData[facebookData$mobile_checkin ==1,])/ length(facebookData$mobile_checkin)
length(facebookData[facebookData$mobile_checkin ==1,])
length((facebookData[facebookData$mobile_checkin ==1,]).rows)
facebookData.rows
size(facebookData)
nrows(facebookData[facebookData$mobile_checkin ==1,])/ length(facebookData$mobile_checkin)
nrow(facebookData[facebookData$mobile_checkin ==1,])/ length(facebookData$mobile_checkin)
nrow(facebookData[facebookData$mobile_checkin ==1,])/ nrow(facebookData$mobile_checkin)
nrow(facebookData[facebookData$mobile_checkin ==1,])/ length(facebookData$mobile_checkin)
sum(facebookData$mobile_checkin==1)/ length(facebookData$mobile_checkin)
sum(facebookData$mobile_checkin==1)/ length(facebookData$mobile_checkin) * 100
clear()
?console
library(ggplot2)
data(diamonds)
summary(diamonds)
str(diamonds)
levels(diamonds$color)
qplot(x=price, data=diamonds)+
facet_wrap(~color)
qplot(x= price, data=diamonds, geom='freqpoly', color=color)
str(diamonds)
levels(diamonds$color)
?diamonds
qplot(x=price, data=diamonds, bins=10)+
scale_x_continuous()
qplot(x=price, data=diamonds, bins=10)+
scale_x_continuous(breaks=(0,20000, 1000))
qplot(x=price, data=diamonds, bins=10)+
scale_x_continuous(breaks=seq(0,20000, 1000))
qplot(x=price, data=diamonds, bins=10)+
scale_x_continuous(breaks=seq(0,20000, 2500))
qplot(x=price, data=diamonds, binwidth=2500, color=I('black'), fill=I('darkorange'))+
scale_x_continuous(breaks=seq(0,20000, 2500))
qplot(x=price, data=diamonds, binwidth=1000, color=I('black'), fill=I('darkorange'))+
scale_x_continuous(breaks=seq(0,20000, 2500))
summary(diamonds$price)
IQR_price = summary(diamonds$price)[5] - summary(diamonds$price)[2]
IQR_price
qu3_price = summary(diamonds$price)[5]
qu3_price + 3*IQR_price
high_outliers = subset(diamonds, price > qu3_price + 3*IQR_price)
View(high_outliers)
View(high_outliers)
qu3_price[1]
as.vector(qu3_price)
IQR_price = as.integer(summary(diamonds$price)[5] - summary(diamonds$price)[2])
qu3_price = as.integer(summary(diamonds$price)[5])
qu3_price + 3*IQR_price
high_outliers = subset(diamonds, price > (qu3_price + 3*IQR_price))
qu1_price = as.integer(summary(diamonds$price)[2])
low_outliers = subset(diamonds, price < (qu1_price - 3*IQR_price))
summary(diamonds$price)
nrows(subset(diamonds, price > 500))
nrow(subset(diamonds, price > 500))
nrow(subset(diamonds, price < 500))
nrow(subset(diamonds, price < 250))
nrow(subset(diamonds, price >= 1500))
nrow(subset(diamonds, price >= 15000))
qplot(x=price, data=diamonds, binwidth=50, fill=I('black'), color=I('turquoise'))+
scale_x_continuous(breaks=seq(0,2000,50)) +
coord_cartesian(xlim=c(0,2000))
qplot(x=price, data=diamonds, binwidth=50, color=I('black'), fill=I('turquoise'))+
scale_x_continuous(breaks=seq(0,2000,50)) +
coord_cartesian(xlim=c(0,2000))
qplot(x=price, data=diamonds, binwidth=50, color=I('black'), fill=I('turquoise'))+
scale_x_continuous(breaks=seq(0,2000,100)) +
coord_cartesian(xlim=c(0,2000))
qplot(x=price, data=diamonds, binwidth=50, color=I('black'), fill=I('turquoise'))+
scale_x_continuous(breaks=seq(300,2000,100)) +
coord_cartesian(xlim=c(300,2000))
summary(subset(diamonds, price < 2000))
summary(subset(diamonds, price < 2000, price))
summary(diamonds$price)
?diamonds
qplot(x=price, data=diamonds, binwidth=100, color=I('black'), fill=I('yellow'))+
facet_wrap(~cut)
qplot(x=price, data=diamonds, binwidth=1000, color=I('black'), fill=I('yellow'))+
facet_wrap(~cut)
by(diamonds$price, diamonds$cut, summary)
by(diamonds$price, diamonds$cut, summary, digits = max(getOption('digits')))
?facet_wrap
qplot(diamonds$price)+
facet_wrap(~diamonds$cut)
qplot(diamonds$price)+
facet_wrap(~cut)
qplot(x=price, data= diamonds)+
facet_wrap(~cut, scales='free')
qplot(x=price, data= diamonds)+
facet_wrap(~cut, scales='y_free')
qplot = (x=price/carat, data=diamonds, bins=20, color='black', fill='cyan')+
facet_wrap(~cut, scales='free')
View(diamonds)
View(diamonds)
qplot = (x=price/carat, data=diamonds, bins=20, color=I('black'), fill=I('cyan'))+
facet_wrap(~cut, scales='free')
qplot = (x=(diamonds$price/diamonds$carat), data=diamonds, bins=20, color=I('black'), fill=I('cyan'))+
facet_wrap(~cut, scales='free')
qplot(x=(diamonds$price/diamonds$carat), data=diamonds, bins=20, color=I('black'), fill=I('cyan'))+
facet_wrap(~cut, scales='free')
qplot(x=(diamonds$price/diamonds$carat), data=diamonds, bins=20,
color=I('black'), fill=I('cyan'),
xlab='Price Per Carat')+
facet_wrap(~cut, scales='free')
qplot(x=(diamonds$price/diamonds$carat), data=diamonds, bins=20,
color=I('black'), fill=I('cyan'),
xlab='Price Per Carat')+
facet_wrap(~cut, scales='y_free')+
scale_x_continuous()
qplot(x=(diamonds$price/diamonds$carat), data=diamonds, bins=20,
color=I('black'), fill=I('cyan'),
xlab='Price Per Carat')+
facet_wrap(~cut, scales='free_y')+
scale_x_continuous()
qplot(x=(diamonds$price/diamonds$carat), data=diamonds, bins=20,
color=I('black'), fill=I('cyan'),
xlab='Price Per Carat')+
facet_wrap(~cut, scales='free_y')+
scale_x_continuous(breaks=seq(0,15000, 1000))
qplot(x=(diamonds$price/diamonds$carat), data=diamonds, bins=20,
color=I('black'), fill=I('cyan'),
xlab='Price Per Carat')+
facet_wrap(~cut, scales='free_y')+
scale_x_continuous(breaks=seq(0,15000, 2500))
qplot(x=(diamonds$price/diamonds$carat), data=diamonds, bins=20,
color=I('black'), fill=I('cyan'),
xlab='Price Per Carat')+
facet_wrap(~cut, scales='free_y')+
scale_x_continuous(breaks=seq(0,15000, 5000))
qplot(x=log10(diamonds$price/diamonds$carat), data=diamonds, bins=20,
color=I('black'), fill=I('cyan'),
xlab='Price Per Carat')+
facet_wrap(~cut, scales='free_y')+
scale_x_continuous(breaks=seq(0,15000, 5000))
qplot(x=log10(diamonds$price/diamonds$carat), data=diamonds, bins=20,
color=I('black'), fill=I('cyan'),
xlab='Price Per Carat')+
facet_wrap(~cut, scales='free_y')+
scale_x_continuous(breaks=seq(0,4,0.5))
qplot(x=log10(diamonds$price/diamonds$carat), data=diamonds, bins=20,
color=I('black'), fill=I('cyan'),
xlab='Price Per Carat Log10 Scale')+
facet_wrap(~cut, scales='free_y')+
scale_x_continuous(breaks=seq(0,4,0.5))
qplot(x=log10(diamonds$price/diamonds$carat), data=diamonds, bins=20,
color=I('black'), fill=I('cyan'),
xlab='Price Per Carat Log10 Scale')+
facet_wrap(~cut, scales='free_y')+
scale_x_continuous(lim=c(0,5),breaks=seq(0,4,0.5))
qplot(x=log10(diamonds$price/diamonds$carat), data=diamonds, bins=20,
color=I('black'), fill=I('cyan'),
xlab='Price Per Carat Log10 Scale')+
facet_wrap(~cut, scales='free_y')+
scale_x_continuous(lim=c(2,5),breaks=seq(0,4,0.5))
qplot(x=log10(diamonds$price/diamonds$carat), data=diamonds, binwidth=100,
color=I('black'), fill=I('cyan'),
xlab='Price Per Carat Log10 Scale')+
facet_wrap(~cut, scales='free_y')+
scale_x_continuous(lim=c(2,5),breaks=seq(0,4,0.5))
qplot(x=log10(diamonds$price/diamonds$carat), data=diamonds, binwidth=0.25,
color=I('black'), fill=I('cyan'),
xlab='Price Per Carat Log10 Scale')+
facet_wrap(~cut, scales='free_y')+
scale_x_continuous(lim=c(2,5),breaks=seq(0,4,0.5))
qplot(x=log10(diamonds$price/diamonds$carat), data=diamonds, binwidth=0.1,
color=I('black'), fill=I('cyan'),
xlab='Price Per Carat Log10 Scale')+
facet_wrap(~cut, scales='free_y')+
scale_x_continuous(lim=c(2,5),breaks=seq(0,4,0.5))
qplot(x=log10(diamonds$price/diamonds$carat), data=diamonds, binwidth=0.05,
color=I('black'), fill=I('cyan'),
xlab='Price Per Carat Log10 Scale')+
facet_wrap(~cut, scales='free_y')+
scale_x_continuous(lim=c(2,5),breaks=seq(0,4,0.5))
qplot(x=log10(diamonds$price/diamonds$carat), data=diamonds, binwidth=0.05,
color=I('black'), fill=I('cyan'),
xlab='Price Per Carat Log10 Scale')+
facet_wrap(~cut, scales='free_y')+
scale_x_continuous(lim=c(3,5),breaks=seq(0,4,0.5))
qplot(x=log10(diamonds$price/diamonds$carat), data=diamonds, binwidth=0.05,
color=I('black'), fill=I('cyan'),
xlab='Price Per Carat Log10 Scale')+
facet_wrap(~cut, scales='free_y')+
scale_x_continuous(lim=c(3,4),breaks=seq(3,4,0.1))
qplot(x=price, data=diamonds, geom='boxplot')
qplot(x=cut, y=price data=diamonds, geom='boxplot')
qplot(x=cut, y=price, data=diamonds, geom='boxplot')
qplot(x=cut, y=price, data=diamonds, geom='boxplot') +
coord_cartesian(ylim=c(300,10000))
qplot(x=clarity, y=price, data=diamonds, geom='boxplot') +
coord_cartesian(ylim=c(300,10000))
?diamonds
qplot(x=clarity, y=price, data=diamonds, geom='boxplot') +
coord_cartesian(ylim=c(300,10000))
qplot(x=color, y=price, data=diamonds, geom='boxplot') +
coord_cartesian(ylim=c(300,10000))
qplot(x=carat, y=price, data=diamonds, geom='boxplot') +
coord_cartesian(ylim=c(300,10000))
qplot(x=carat, y=price, data=diamonds, geom='line')
by(diamonds$price, diamonds$clarity, summary, digits=max(getDigits('digits')))
by(diamonds$price, diamonds$clarity, summary, digits=max(getOption('digits')))
by(diamonds$carat, diamonds$clarity, summary, digits=max(getOption('digits')))
by(diamonds$carat, diamonds$color, summary, digits=max(getOption('digits')))
by(diamonds$price, diamonds$clarity, summary, digits=max(getOption('digits')))
by(diamonds$price, diamonds$color, summary, digits=max(getOption('digits')))
by(diamonds$price, diamonds$cut, summary, digits=max(getOption('digits')))
by(diamonds$price, diamonds$clarity, summary, digits=max(getOption('digits')))
qplot(x=carat, y=price, data=diamonds, geom='boxplot') +
coord_cartesian(ylim=c(300,10000))
qplot(x=cut, y=price, data=diamonds, geom='boxplot') +
coord_cartesian(ylim=c(300,10000))
qplot(x=color, y=price, data=diamonds, geom='boxplot')+
coord_cartesian(ylim=c(300,10000))
?diamonds
summary(diamonds$width)
summary(diamonds$depth)
summary(diamonds$table)
diamonds$table
by(diamonds$price, diamonds$color, summary)
J_diamonds = subset(diamonds, color='J', price)
J_diamonds = subset(diamonds, color=='J', price)
J_diamonds_price = subset(diamonds, color=='J', price)
IQR_J_price = as.integer(summary(J_diamonds_price)[5]- summary(J_diamonds_price)[2])
summary(J_diamonds_price)
summary(J_diamonds_price)[1]
summary(J_diamonds_price)[5]
IQR_J_price = as.integer((summary(J_diamonds_price))[5]- (summary(J_diamonds_price)[2])
summary(J_diamonds_price)[5]
IQR_J_price = as.integer((summary(J_diamonds_price))[5]- (summary(J_diamonds_price)[2]))
IQR_J_price = ((summary(J_diamonds_price))[5]- (summary(J_diamonds_price)[2]))
summary(J_diamonds_price)[5] - summary(J_diamonds_price)[2]
as.integer(summary(J_diamonds_price)[5]) - as.integer(summary(J_diamonds_price)[2])
qplot(x=color, y= price/carat, data=diamonds, geom='boxplot')
qplot(x=color, y= price/carat, data=diamonds, geom='boxplot')+
coord_cartesian(ylim=c(300,7500))
qplot(x=carat, data=diamonds, geom='freqpoly', colors=carat)
qplot(x=carat, data=diamonds, geom='freqpoly', binwidth=0.25)
qplot(x=carat, data=diamonds, geom='freqpoly', colors = carat)
qplot(x=carat, data=diamonds, binwidth = 0.25) +
facet_wrap(~carat)
qplot(x=carat, data=diamonds, geom='freqpoly', colors = carat)
qplot(x=carat, data=diamonds, binwidth = 0.25)
qplot(x=carat, data=diamonds, binwidth = 0.25) +
scale_x_continuous(breaks=seq(0,3,0.1))
qplot(x=carat, data=diamonds, binwidth = 0.25) +
scale_x_continuous(breaks=seq(0,3,0.25))
qplot(x=carat, data=diamonds, binwidth = 0.25) +
scale_x_continuous(lim = c(0,3), breaks=seq(0,3,0.25))
table(table(diamonds$carat) > 2000)
table(diamonds$carat(table[diamonds$carat) > 2000])
table(diamonds$carat)table[diamonds$carat) > 2000])
table(diamonds$carat)[table(diamonds$carat) > 2000])
table(diamonds$carat)[table(diamonds$carat > 2000])
with(diamonds, table(carat)[table(carat) > 2000])
by(diamonds$carat, count)
by(diamonds$carat, sum)
by(diamonds$carat)
table(diamonds$carat)
table(diamonds$carat > 2000)
table(diamonds$carat(table[diamonds$carat > 2000]))
table(diamonds$carat)(table[diamonds$carat > 2000])
(table[diamonds$carat > 2000])
(table([diamonds$carat > 2000]))
table([diamonds$carat > 2000])
table(diamonds$carat)[table(diamonds$carat)>2000]
