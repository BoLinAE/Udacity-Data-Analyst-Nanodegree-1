library(ggplot2)
library(dplyr)
ggplot(aes(x=volume, y=price), data=subset(df, volume != 0 & volume <= 800)) +
geom_point(color='red') + coord_cartesian(xlim=c(0,500))
ggplot(aes(x=volume, y=price), data=subset(df, volume != 0 & volume <= 800)) +
geom_point(color='red') + coord_cartesian(xlim=c(0,500)) +
geom_smooth(method='lm')
ggplot(aes(x=volume, y=price), data=subset(df, volume != 0 & volume <= 800)) +
geom_point(color='red') + coord_cartesian(xlim=c(0,500)) +
geom_smooth(method='lm', linetype = 3)
ggplot(aes(x=volume, y=price), data=subset(df, volume != 0 & volume <= 800)) +
geom_point(color='red') + coord_cartesian(xlim=c(0,500)) +
geom_smooth(method='lm', linetype = 4)
clarity_groups <- group_by(df, clarity)
df_by_clarity <- summarize(clarity_groups,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
head(df_by_clarity)
head(df_by_clarity, 7)
?diamonds
head(df_by_clarity, 8)
library(dplyr)
?dplyr
clarity_groups <- group_by(df, clarity)
df_by_clarity <- summarize(clarity_groups,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
head(df_by_clarity, 8)
color_groups <- group_by(df, color)
diamonds_mp_by_color <- summarize(color_groups,
mean_price= mean(price))
diamonds_mp_by_clarity <- summarize(clarity_groups,
mean_price = mean(price))
?ggplot
?geom
p2 <- ggplot(aes(x = color, y=mean_price), data = diamonds_mp_by_color) + geom_bar(color='green') +
ggtitle('Mean Price by Color')
library(gridExtra)
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(aes(x = clarity, y=mean_price), data = diamonds_mp_by_clarity) + geom_bar(color='red') +
ggtitle('Mean Price by Clarity')
p2 <- ggplot(aes(x = color, y=mean_price), data = diamonds_mp_by_color) + geom_bar(color='green') +
ggtitle('Mean Price by Color')
library(gridExtra)
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(aes(y=mean_price), data = diamonds_mp_by_clarity) + geom_bar(color='red') +
ggtitle('Mean Price by Clarity')
p2 <- ggplot(aes(y=mean_price), data = diamonds_mp_by_color) + geom_bar(color='green') +
ggtitle('Mean Price by Color')
library(gridExtra)
grid.arrange(p1, p2, ncol=2)
View(diamonds_mp_by_clarity)
View(diamonds_mp_by_color)
p1 <- ggplot(aes(x = clarity), data = diamonds_mp_by_clarity) + geom_bar(color='red') +
ggtitle('Mean Price by Clarity')
p2 <- ggplot(aes(x = color), data = diamonds_mp_by_color) + geom_bar(color='green') +
ggtitle('Mean Price by Color')
library(gridExtra)
grid.arrange(p1, p2, ncol=2)
theme_update(plot.title = element_text(hjust = 0.5))
p1 <- ggplot(aes(x = clarity), data = diamonds_mp_by_clarity) + geom_bar(color='red') +
ggtitle('Mean Price by Clarity')
p2 <- ggplot(aes(x = color), data = diamonds_mp_by_color) + geom_bar(color='green') +
ggtitle('Mean Price by Color')
library(gridExtra)
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(aes(x = clarity, y= mean_price), data = diamonds_mp_by_clarity) + geom_bar(color='red') +
ggtitle('Mean Price by Clarity')
p2 <- ggplot(aes(x = color), data = diamonds_mp_by_color) + geom_bar(color='green') +
ggtitle('Mean Price by Color')
library(gridExtra)
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(aes(x = clarity, y= mean_price), data = diamonds_mp_by_clarity) +
geom_bar(stat='identity', color='red') +
ggtitle('Mean Price by Clarity')
p2 <- ggplot(aes(x = color, y= mean_price), data = diamonds_mp_by_color) +
geom_bar(stat='identity' , color='green') +
ggtitle('Mean Price by Color')
library(gridExtra)
grid.arrange(p1, p2, ncol=2)
?diamonds
p1 <- ggplot(aes(x = clarity, y= mean_price), data = diamonds_mp_by_clarity) +
geom_bar(stat='identity', color='red') + lab(x='Clarity (I1 is worst)')
ggtitle('Mean Price by Clarity')
p2 <- ggplot(aes(x = color, y= mean_price), data = diamonds_mp_by_color) +
geom_bar(stat='identity' , color='green') + lab(x='Clarity (J is worst)')
ggtitle('Mean Price by Color')
library(gridExtra)
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(aes(x = clarity, y= mean_price), data = diamonds_mp_by_clarity) +
geom_bar(stat='identity', color='red') + labs(x='Clarity (I1 is worst)')
ggtitle('Mean Price by Clarity')
p2 <- ggplot(aes(x = color, y= mean_price), data = diamonds_mp_by_color) +
geom_bar(stat='identity' , color='green') + labs(x='Clarity (J is worst)')
ggtitle('Mean Price by Color')
library(gridExtra)
grid.arrange(p1, p2, ncol=2)
ggplot(aes(x=carat, y=price), data=df) + geom_point(color='orange')
cut_groups <- group_by(df, cut)
diamonds_mp_by_cut <- summarize(cut_groups,
mean_price = mean(price))
p1 <- ggplot(aes(x = clarity, y= mean_price), data = diamonds_mp_by_clarity) +
geom_bar(stat='identity', color='red') + labs(x='Clarity (I1 is worst)')
ggtitle('Mean Price by Clarity')
p2 <- ggplot(aes(x = color, y= mean_price), data = diamonds_mp_by_color) +
geom_bar(stat='identity' , color='green') + labs(x='Clarity (J is worst)')
ggtitle('Mean Price by Color')
p3 <- ggplot(aes(x = color, y= mean_price), data = diamonds_mp_by_cut) +
geom_bar(stat='identity' , color='pink') + labs(x='Cut of Diamond')
ggtitle('Mean Price by Color')
library(gridExtra)
grid.arrange(p1, p2, p3, ncol=3)
p1 <- ggplot(aes(x = clarity, y= mean_price), data = diamonds_mp_by_clarity) +
geom_bar(stat='identity', color='red') + labs(x='Clarity (I1 is worst)')
ggtitle('Mean Price by Clarity')
p2 <- ggplot(aes(x = color, y= mean_price), data = diamonds_mp_by_color) +
geom_bar(stat='identity' , color='green') + labs(x='Clarity (J is worst)')
ggtitle('Mean Price by Color')
p3 <- ggplot(aes(x = color, y= mean_price), data = diamonds_mp_by_cut) +
geom_bar(stat='identity' , color='pink') + labs(x='Cut of Diamond')
ggtitle('Mean Price by Color')
library(gridExtra)
grid.arrange(p1, p2, p3, ncol=3)
View(diamonds_mp_by_cut)
p1 <- ggplot(aes(x = clarity, y= mean_price), data = diamonds_mp_by_clarity) +
geom_bar(stat='identity', color='red') + labs(x='Clarity (I1 is worst)')
ggtitle('Mean Price by Clarity')
p2 <- ggplot(aes(x = color, y= mean_price), data = diamonds_mp_by_color) +
geom_bar(stat='identity' , color='green') + labs(x='Clarity (J is worst)')
ggtitle('Mean Price by Color')
p3 <- ggplot(aes(x = color, y= mean_price), data = diamonds_mp_by_cut) +
geom_bar(stat='identity' , color='pink') + labs(x='Cut of Diamond')
ggtitle('Mean Price by Color')
library(gridExtra)
grid.arrange(p1, p2, p3, ncol=2)
library(gridExtra)
grid.arrange(p1, p2, p3, ncol=2)
p1 <- ggplot(aes(x = clarity, y= mean_price), data = diamonds_mp_by_clarity) +
geom_bar(stat='identity', color='red') + labs(x='Clarity (I1 is worst)')
ggtitle('Mean Price by Clarity')
p2 <- ggplot(aes(x = color, y= mean_price), data = diamonds_mp_by_color) +
geom_bar(stat='identity' , color='green') + labs(x='Clarity (J is worst)')
ggtitle('Mean Price by Color')
p3 <- ggplot(aes(x = cut, y= mean_price), data = diamonds_mp_by_cut) +
geom_bar(stat='identity' , color='pink') + labs(x='Cut of Diamond')
ggtitle('Mean Price by Color')
library(gridExtra)
grid.arrange(p1, p2, p3, ncol=2)
library(ggplot2)
library(dplyr)
df = read.csv('inequality_GINI.csv', headers=TRUE, row.names=1)
df = read.csv('inequality_GINI.csv', row.names=1)
View(df)
yearly_averages <- colMeans(df)
yearly_averages <- colMeans(df, rm.na=TRUE)
?na
yearly_averages <- colMeans(df, ig.na=TRUE)
yearly_averages <- colMeans(df, na.rm=TRUE)
ggplot(aes(y=yearly_averages)) + geom_line()
ggplot(yearly_averages) + geom_line(x=seq(1:length(yearly_averages), y=yearly_averages)
ggplot(yearly_averages) + geom_line(x=seq(1:length(yearly_averages), y=yearly_averages)
qplot(yearly_averages)
qplot(yearly_averages) + geom_line(0)
qplot(yearly_averages, geom='line')
View(df)
labels = seq(1978,2010)
qplot(labels,yearly_averages, geom='line')
ggplot(aes(x=labels, y=yearly_averages)) + geom_line()
qplot(labels,yearly_averages, geom='line', color='yellow', lwd=2, linetype=4)
qplot(labels,yearly_averages, geom='line', color='yellow', lwd=2)
qplot(labels,yearly_averages, geom='line', color='yellow', lwd=1)
qplot(labels,yearly_averages, geom='line', color='red', lwd=1)
qplot(labels,yearly_averages, geom='line', color='blue', lwd=1)
qplot(labels,yearly_averages, geom='line',lwd=1) +
color('red')
yearly_averages <- data.frame(labels, yearly_averages)
View(yearly_averages)
View(yearly_averages)
yearly_averages <- data.frame(year, average_inequality)
average_inequality <- colMeans(df, na.rm=TRUE)
year <- seq(1978,2010)
yearly_averages <- data.frame(year, average_inequality)
ggplot(aes(x=year, y= average_inequality), data = yearly_averages) +
geom_line(color='orange', lwd=1, linetype=2)
ggplot(aes(x=year, y= average_inequality), data = yearly_averages) +
geom_line(color='orange', lwd=1, linetype=2) + labs(xlab='Year',
ylab = 'Average Worldwide Inequality')
ggplot(aes(x=year, y= average_inequality), data = yearly_averages) +
geom_line(color='orange', lwd=1, linetype=2) + labs(x='Year',
y = 'Average Worldwide Inequality')
ggplot(aes(x=year, y= average_inequality), data = yearly_averages) +
geom_line(color='orange', lwd=1, linetype=2) +
labs(x='', y = 'Average Worldwide Inequality', title='Inequality over Time')
ggplot(aes(x=year, y= average_inequality), data = yearly_averages) +
geom_line(color='orange', lwd=1) +
labs(x='', y = 'Average Worldwide Inequality', title='Inequality over Time')
ggplot(aes(x=year, y= average_inequality), data = yearly_averages) +
geom_line(color='orange', lwd=1) +
labs(x='', y = 'Average Worldwide Inequality', title='Inequality over Time') +
scale_x_continuous(breaks=1980,2010, 5)
ggplot(aes(x=year, y= average_inequality), data = yearly_averages) +
geom_line(color='orange', lwd=1) +
labs(x='', y = 'Average Worldwide Inequality', title='Inequality over Time') +
scale_x_continuous(breaks=seq(1980,2010, 5))
in_1988 <- subset(df, X1998)
in_1988 <- df[,X1988]
in_1988 <- df[,X1988]
in_1988 <- df[,'X1988']
in_1988 <- subset(df, !is.na(X1988))
in_1988 <- subset(df, !is.na(X1988), X1998)
in_1988 <- subset(df, !is.na(X1988), X1988)
in_1987 <- subset(df, !is.na(X1987), X1987)
View(in_1988)
View(in_1987)
summary(in_1988)
summary(in_1987)
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
getwd()
setwd('Udacity-Data-Analyst-Nanodegree/Lessons/P4 Lesson 4/')
getwd()
inequality <- read.csv('Inequality.csv')
poverty <- read.csv('Poverty.csv')
billionaires <- read.csv('Billionaires.csv')
energy <- read.csv('Energy.csv')
literacy <- read.csv('Literacy.csv')
life_expectancy <- read.csv('Life Expectancy.csv')
library(ggplot2)
library(dplyr)
df <- merge(inequality, poverty, billionaires, energy, literacy, life_expectancy,
on='Country')
df <- merge(inequality, poverty, billionaires, energy, literacy, life_expectancy,
by='Country')
df <- Reduce(function(x,y) merge(x,y, all=TRUE), list(inequality, poverty, energy, literacy, life_expectancy))
View(df)
df <- Reduce(function(x,y) merge(x,y, by='Country'), list(inequality, poverty, energy, literacy, life_expectancy))
View(df)
inequality <- read.csv('Inequality.csv')
poverty <- read.csv('Poverty.csv')
billionaires <- read.csv('Billionaires.csv')
energy <- read.csv('Energy.csv')
literacy <- read.csv('Literacy.csv')
life_expectancy <- read.csv('Life Expectancy.csv')
df <- Reduce(function(x,y) merge(x,y, by='Country'), list(inequality, poverty, energy, literacy, life_expectancy))
View(df)
View(inequality)
View(life_expectancy)
View(literacy)
View(poverty)
View(billionaires)
View(energy)
inequality <- read.csv('Inequality.csv')
poverty <- read.csv('Poverty.csv')
billionaires <- read.csv('Billionaires.csv')
energy <- read.csv('Energy.csv')
literacy <- read.csv('Literacy.csv')
life_expectancy <- read.csv('Life Expectancy.csv')
df <- Reduce(function(x,y) merge(x,y, by='Country'), list(inequality, poverty, energy, literacy, life_expectancy))
View(energy)
View(df)
df <- Reduce(function(x,y) merge(x,y, by='Country'), list(inequality, poverty, energy, literacy, life_expectancy, billionaires))
head(df)
tail(df)
View(billionaires)
View(billionaires)
ggplot(aes(x=poverty_rate, y= inequality), data=df) + geom_point()
ggplot(aes(x=poverty_rate, y= inequality), data=df) + geom_point(color='blue') +
labs(x='Poverty Rate', y='Inequality', title='Inquality vs. Poverty Rate')
ggplot(aes(x=poverty_rate, y= inequality), data=df) + geom_point(color='blue') +
labs(x='Poverty Rate (% < $2)', y='Inequality', title='Inquality vs. Poverty Rate')
View(life_expectancy)
life_expectancy <- read.csv('Life Expectancy.csv')
View(life_expectancy)
life_expectancy <- read.csv('Life Expectancy.csv')
# Start off with a few simple scatter plots
ggplot(aes(x=poverty_rate, y= inequality), data=df) + geom_point(color='blue') +
labs(x='Poverty Rate (% < $2)', y='Inequality', title='Inquality vs. Poverty Rate')
# Start off with a few simple scatter plots
ggplot(aes(x=poverty_rate, y= inequality), data=df) + geom_point(color='blue') +
labs(x='Poverty Rate (% < $2)', y='Inequality', title='Inquality vs. Poverty Rate')
ggplot(aes(x=billionaires, y=inequality), data= df) + geom_point(color='green')
View(df)
ggplot(aes(x=billionaire_pm, y=inequality), data= df) + geom_point(color='green')
ggplot(aes(x=billionaire_pm, y=inequality), data= df) + geom_point(color='green') +
coord_cartesian(xlim=c(0,1)) + xlab('Billionaires per Million') + ylab('Inequality')
ggplot(aes(x=billionaire_pm, y=inequality), data= df) + geom_point(color='green') +
coord_cartesian(xlim=c(0,0.3)) + xlab('Billionaires per Million') + ylab('Inequality') + ggtitle('Inequality vs. Billionaires')
ggplot(aes(x=billionaire_pm, y=inequality), data= subset(df, billionaire_pm != 0) + geom_point(color='green') +
coord_cartesian(xlim=c(0,0.3)) + xlab('Billionaires per Million') + ylab('Inequality') + ggtitle('Inequality vs. Billionaires')
geom_point(color='green') +
ggplot(aes(x=billionaire_pm, y=inequality), data= subset(df, billionaire_pm != 0)) + geom_point(color='green') +
coord_cartesian(xlim=c(0,0.3)) + xlab('Billionaires per Million') + ylab('Inequality') + ggtitle('Inequality vs. Billionaires')
summarize(df, rm.na=TRUE)
summarize(df)
summarize(df)
summarise(df)
summary(df)
summary(df[,2:])
summary(df[,2:7])
summary(subset(df, billionaire_pm != 0, billionaire_pm)
summary(subset(df, billionaire_pm != 0, billionaire_pm)
summary(subset(df, billionaire_pm != 0, billionaire_pm))
summary(df[,2:7])
summary(subset(df, billionaire_pm != 0, billionaire_pm))
which(df$billionaire_pm==max(df$billionaire_pm))
View(df)
df$country[139]
df$Country[139]
with(df, Country[which(billionaire_pm==max(billionaire_pm)])
df$Country[which(df$billionaire_pm==max(df$billionaire_pm)])
df$Country[which(df$billionaire_pm==max(df$billionaire_pm))]
df$Country[which(df$billionaire_pm==max(df$billionaire_pm))]
df$Country[(df$billionaire_pm==max(df$billionaire_pm))]
View(df)
df$Country[(df$billionaire_pm==max(df$billionaire_pm))]
summary(subset(df, billionaire_pm != 0, billionaire_pm))
# Which country can the maximum be?
df$Country[(df$billionaire_pm==max(df$billionaire_pm))]
ggplot(aes(x=billionaire_pm, y=inequality), data= subset(df, billionaire_pm != 0)) + geom_point(color='green') +
coord_cartesian(xlim=c(0,0.3)) + xlab('Billionaires per Million') + ylab('Inequality') + ggtitle('Inequality vs. Billionaires')
# Start off with a few simple scatter plots
ggplot(aes(x=poverty_rate, y= inequality), data=df) + geom_point(color='blue') +
labs(x='Poverty Rate (% < $2)', y='Inequality', title='Inquality vs. Poverty Rate')
ggplot(aes(x=poverty_rate, y= inequality), data=df) + geom_point(color='blue') +
labs(x='Poverty Rate (% < $2)', y='Inequality', title='Inquality vs. Poverty Rate')
ggplot(aes(x=billionaire_pm, y=inequality), data= subset(df, billionaire_pm != 0)) + geom_point(color='green') +
coord_cartesian(xlim=c(0,0.3)) + xlab('Billionaires per Million') + ylab('Inequality') + ggtitle('Inequality vs. Billionaires')
ggplot(aes(x=literacy, y=life_expectancy), data= df) + geom_point(color='green') +
coord_cartesian(xlim=c(0,0.3)) + xlab('Literacy') + ylab('Life Expectancy') + ggtitle('Life Expectancy vs. Literacy')
ggplot(aes(x=literacy_race, y=life_expectancy), data= df) + geom_point(color='green') +
coord_cartesian(xlim=c(0,0.3)) + xlab('Literacy') + ylab('Life Expectancy') + ggtitle('Life Expectancy vs. Literacy')
ggplot(aes(x=literacy_rate, y=life_expectancy), data= df) + geom_point(color='green') +
coord_cartesian(xlim=c(0,0.3)) + xlab('Literacy') + ylab('Life Expectancy') + ggtitle('Life Expectancy vs. Literacy')
ggplot(aes(x=literacy_rate, y=life_expectancy), data= df) + geom_point(color='green') +
coord_cartesian() + xlab('Literacy') + ylab('Life Expectancy') + ggtitle('Life Expectancy vs. Literacy')
ggplot(aes(x=literacy_rate, y=life_expectancy), data= df) + geom_point(color='green') +
coord_cartesian(ylim=c(50,80)) + xlab('Literacy') + ylab('Life Expectancy') + ggtitle('Life Expectancy vs. Literacy')
ggplot(aes(x=literacy_rate, y=life_expectancy), data= df) + geom_point(color='green') +
coord_cartesian(ylim=c(50,80)) + xlab('Literacy') + ylab('Life Expectancy') + ggtitle('Life Expectancy vs. Literacy') + geom_smooth(method='lm')
ggplot(aes(x=energy, y=billionaire_pm), data= subset(df, billionaire_pm != 0)) + geom_point(color='green') +
coord_cartesian() + ylab('Billionaires per Million') + xlab('Energy Use per Person in TOE') + ggtitle('Billionaires per Million vs Energy Use')
ggplot(aes(x=energy, y=billionaire_pm), data= subset(df, billionaire_pm != 0)) + geom_point(color='green') +
coord_cartesian(ylim=c(0,0.3)) + ylab('Billionaires per Million') + xlab('Energy Use per Person in TOE') + ggtitle('Billionaires per Million vs Energy Use')
ggplot(aes(x=literacy_rate, y=poverty_rate), date=df) + geom_point(color='red')
ggplot(aes(x=literacy_rate, y=poverty_rate), data=df) + geom_point(color='red')
ggplot(aes(x=literacy_rate, y=poverty_rate), data=df) + geom_point(color='red') +
coord_cartesian(xlim=c(40,100)) + labs(x='Literacy Rate', y='Poverty Rate' ,
title= ' Poverty vs Literacy')
ggplot(aes(x=literacy_rate, y=poverty_rate), data=df) + geom_point(color='red') +
coord_cartesian(xlim=c(40,100)) + labs(x='Literacy Rate', y='Poverty Rate' ,
title= ' Poverty vs Literacy') +
geom_smooth(method='lm')
ggplot(aes(x=literacy_rate, y=poverty_rate), data=df) + geom_point(color='red', lwd = 2) +
coord_cartesian(xlim=c(40,100)) + labs(x='Literacy Rate', y='Poverty Rate' ,
title= ' Poverty vs Literacy') +
geom_smooth(method='lm')
ggplot(aes(x=literacy_rate, y=poverty_rate), data=df) + geom_point(color='red', lwd = df$billionaire_pm) +
coord_cartesian(xlim=c(40,100)) + labs(x='Literacy Rate', y='Poverty Rate' ,
title= ' Poverty vs Literacy') +
geom_smooth(method='lm')
ggplot(aes(x=literacy_rate, y=poverty_rate), data=df) + geom_point(color='red', lwd = df$inequality) +
coord_cartesian(xlim=c(40,100)) + labs(x='Literacy Rate', y='Poverty Rate' ,
title= ' Poverty vs Literacy') +
geom_smooth(method='lm')
ggplot(aes(x=literacy_rate, y=poverty_rate), data=df) + geom_point(color='red', lwd = 4) +
coord_cartesian(xlim=c(40,100)) + labs(x='Literacy Rate', y='Poverty Rate' ,
title= ' Poverty vs Literacy') +
geom_smooth(method='lm')
ggplot(aes(y=poverty_rate) data = df) + geom_hist()
ggplot(aes(y=poverty_rate), data = df) + geom_hist()
qplot(x = poverty_rate, data=df, fill=I('orange'), color=I('black'))
qplot(x = poverty_rate, data=df, binwidth =5 ,fill=I('orange'), color=I('black'))
qplot(x = poverty_rate, data=df, binwidth =5 ,fill=I('orange'), color=I('black')) + scale_x_continuous(breaks=seq(0,100,5))
qplot(x = poverty_rate, data=df, binwidth =5 ,fill=I('orange'), color=I('black')) + scale_x_continuous(breaks=seq(0,100,10))
qplot(x = poverty_rate, data=df, binwidth =10 ,fill=I('orange'), color=I('black')) + scale_x_continuous(breaks=seq(0,100,10))
qplot(x = poverty_rate, data=df, binwidth =10 ,fill=I('orange'), color=I('black')) + scale_x_continuous(breaks=seq(0,100,10)) + xlab('Poverty Rate')
qplot(x = poverty_rate, data=df, binwidth =10 ,fill=I('orange'), color=I('black')) + scale_x_continuous(breaks=seq(0,100,10)) + xlab('Poverty Rate') + ylab('Count of Countries')
qplot(x = poverty_rate, data=df, binwidth =10 ,fill=I('orange'), color=I('black')) + scale_x_continuous(breaks=seq(0,100,10)) + xlab('Poverty Rate') + ylab('Count of Countries') + title('Poverty Rate Histogram')
qplot(x = poverty_rate, data=df, binwidth =10 ,fill=I('orange'), color=I('black')) + scale_x_continuous(breaks=seq(0,100,10)) + xlab('Poverty Rate') + ylab('Count of Countries') + title(main='Poverty Rate Histogram')
qplot(x = poverty_rate, data=df, binwidth =10 ,fill=I('orange'), color=I('black'), main='Poverty Rate Histogram') + scale_x_continuous(breaks=seq(0,100,10)) + xlab('Poverty Rate') + ylab('Count of Countries')
p1 <- qplot(x = poverty_rate, data=df, binwidth =10 ,fill=I('red'), color=I('black'), lwd= 2, main='Poverty Rate') + scale_x_continuous(breaks=seq(0,100,10)) + xlab('Poverty Rate') + ylab('Count of Countries')
qplot(x = poverty_rate, data=df, binwidth =10 ,fill=I('red'), color=I('black'), lwd= 2, main='Poverty Rate') + scale_x_continuous(breaks=seq(0,100,10)) + xlab('Poverty Rate') + ylab('Count of Countries')
p1 <- qplot(x = poverty_rate, data=df, binwidth =10 ,fill=I('red'), color=I('black'), main='Poverty Rate') + scale_x_continuous(breaks=seq(0,100,10)) + xlab('Poverty Rate') + ylab('Count of Countries')
p2 <- qplot(x = literacy_rate, data=df, binwidth =10 ,fill=I('green'), color=I('black'), main='Literacy Rate') + scale_x_continuous(breaks=seq(0,100,10)) + xlab('Literacy Rate') + ylab('Count of Countries')
grid.arrange(p1, p2, ncol=2)
library(gridExtra)
p1 <- qplot(x = poverty_rate, data=df, binwidth =5 ,fill=I('red'), color=I('black'), main='Poverty Rate') + scale_x_continuous(breaks=seq(0,100,10)) + xlab('Poverty Rate') + ylab('Count')
p2 <- qplot(x = literacy_rate, data=df, binwidth =5 ,fill=I('green'), color=I('black'), main='Literacy Rate') + scale_x_continuous(breaks=seq(0,100,10)) + xlab('Literacy Rate') + ylab('Count')
grid.arrange(p1, p2, ncol=2)
library(reshape2)
d_cor_melt <- arrange(melt(d_cor), -abs(value))
d_cor <- as.matrix(cor(df))
d_cor <- as.matrix(cor(df[,2:7]))
d_cor_melt
d_cor <- as.matrix(cor(df[,2:7]))
d_cor_melt <- arrange(melt(d_cor), -abs(value))
d_cor_melt
library(reshape2)
d_cor <- as.matrix(cor(df[,2:7], rm.na=TRUE))
install.packages('Hmisc')
library(Hmisc)
rcorr(ccs, type='pearson')
ccs <- as.matrix(df)
rcorr(ccs, type='pearson')
ccs <- as.matrix(df[2:7])
rcorr(ccs, type='pearson')
ggplot(aes(x=energy, y=inequality), data=df) + geom_point(color='blue')
View(energy)
# Read in data from 2006
inequality <- read.csv('Inequality.csv')
poverty <- read.csv('Poverty.csv')
billionaires <- read.csv('Billionaires.csv')
energy <- read.csv('Energy.csv')
literacy <- read.csv('Literacy.csv')
life_expectancy <- read.csv('Life Expectancy.csv')
# Create one data frame with all countries and six variables
df <- Reduce(function(x,y) merge(x,y, by='Country'), list(inequality, poverty, energy, literacy, life_expectancy, billionaires))
tail(df)
ccs <- as.matrix(df[2:7])
rcorr(ccs, type='pearson')
View(df)
ggplot(aes(x=literacy, y=life_expectancy), data=df) + geom_point(color='blue')
ggplot(aes(x=literacy, y=Life.expectancy), data=df) + geom_point(color='blue')
ggplot(aes(x=literacy_rate, y=Life.expectancy), data=df) + geom_point(color='blue')
ggplot(aes(x=literacy_rate, y=Life.expectancy), data=df) + geom_point(color='blue') + coord_cartesian(ylim=c(50,80)) +
geom_smooth(method='lm')
ggplot(aes(x=literacy_rate, y=Life.expectancy), data=df) + geom_point(color='yellow') + coord_cartesian(ylim=c(50,80)) +
geom_smooth(method='lm')
ggplot(aes(x=literacy_rate, y=Life.expectancy), data=df) + geom_point(color='purple') + coord_cartesian(ylim=c(50,80)) +
geom_smooth(method='lm')
ggplot(aes(x= poverty_rate, y=Life.expectancy), data=df) + geom_point(color='lightblue') + coord_cartesian(ylim=c(50,80)) +
geom_smooth(method='lm')
ggplot(aes(x= poverty_rate, y=Life.expectancy), data=df) + geom_point(color='lightblue') + coord_cartesian(ylim=c(50,80)) +
geom_smooth(method='lm', color='red')
ggplot(aes(x=literacy_rate, y=Life.expectancy), data=df) + geom_point(color='purple') + coord_cartesian(ylim=c(50,80)) +
geom_smooth(method='lm') + labs(title='Life Expectancy vs Literacy Rate')
ggplot(aes(x= poverty_rate, y=Life.expectancy), data=df) + geom_point(color='crimson') + coord_cartesian(ylim=c(50,80)) +
geom_smooth(method='lm', color='brown') +
labs(title='Life Expectancy vs Poverty Rate')
ggplot(aes(x= poverty_rate, y=Life.expectancy), data=df) + geom_point(color='red4') + coord_cartesian(ylim=c(50,80)) +
geom_smooth(method='lm', color='brown') +
labs(title='Life Expectancy vs Poverty Rate')
ggplot(aes(x= poverty_rate, y=Life.expectancy), data=df) + geom_point(color='red4') + coord_cartesian(ylim=c(50,80)) +
geom_smooth(method='lm', color='lightgoldenrod4') +
labs(title='Life Expectancy vs Poverty Rate')
df$Country[(df$literacy_rate==max(df$literacy_rate))]
df$Country[(df$billionaire_pm==max(df$billionaire_pm))]
df$Country[(df$literacy_rate==max(df$literacy_rate, rm.na=TRUE))]
max(df$literacy_rate)
max(df$literacy_rate, rm.na=TRUE)
df$Country[(df$literacy_rate==max(df$literacy_rate, na.rm=TRUE))]
(df$literacy_rate, na.rm=TRUE))
max(df$literacy_rate, na.rm=TRUE))
max(df$literacy_rate, na.rm=TRUE)
which(df$literacy_rate == max(df$literacy_rate, na.rm=TRUE)
which(df$literacy_rate == max(df$literacy_rate, na.rm=TRUE))
which(df , df$literacy_rate == max(df$literacy_rate, na.rm=TRUE))
df$Country[(df$literacy_rate == max(df$literacy_rate, na.rm=TRUE))]
which(df$Country, max(df$literacy_rate, na.rm=TRUE))
which(df$Country == max(df$literacy_rate, na.rm=TRUE))
df[df$Country == max(df$literacy_rate, na.rm=TRUE))]
df[df$Country == max(df$literacy_rate, na.rm=TRUE)]
ans <- df[df$Country == max(df$literacy_rate, na.rm=TRUE)]
View(ans)
View(ans)
ans <- df[df$literacy_rate == max(df$literacy_rate, na.rm=TRUE)]
df[df$literacy_rate == max(df$literacy_rate, na.rm=TRUE)]
df$Country[df$literacy_rate == max(df$literacy_rate, na.rm=TRUE)]
subset(df, df$literacy_rate == max(df$literacy_rate, na.rm=TRUE))
subset(df, df$billionaire_pm==max(df$billionaire_pm))
subset(df, df$literacy_rate == max(df$literacy_rate, na.rm=TRUE))
subset(df, df$inequality == min(df$inequality))
subset(df, df$inequality == min(df$inequality, na.rm=TRUE))
ggplot(aes(x=literacy_rate, y=poverty_rate), data=df) + geom_point(color='red', lwd = 4) +
coord_cartesian(xlim=c(40,100)) + labs(x='Literacy Rate', y='Poverty Rate' ,  title= ' Poverty vs Literacy') +
geom_smooth(method='lm')
library(ggplot2)
remove.packages(c("ggplot2", "data.table"))
install.packages('Rcpp', dependencies = TRUE)
install.packages('ggplot2', dependencies = TRUE)
install.packages("Rcpp", dependencies = TRUE)
remove.packages(c("ggplot2", "data.table"))
install.packages('Rcpp', dependencies = TRUE)
install.packages('ggplot2', dependencies = TRUE)
install.packages("Rcpp", dependencies = TRUE)
library(ggplot2)
install.packages('ggplot2', dependencies = TRUE)
install.packages('data.table', dependencies = TRUE)
library(dplyr)
library(ggplot2)
inequality <- read.csv('Inequality.csv')
poverty <- read.csv('Poverty.csv')
billionaires <- read.csv('Billionaires.csv')
energy <- read.csv('Energy.csv')
literacy <- read.csv('Literacy.csv')
life_expectancy <- read.csv('Life Expectancy.csv')
# Create one data frame with all countries and six variables
df <- Reduce(function(x,y) merge(x,y, by='Country'), list(inequality, poverty, energy, literacy, life_expectancy, billionaires))
tail(df)
```{r, echo=FALSE}
View(df)
install.packages('Hmisc')
library(Hmisc)
